using UnityEngine;

[RequireComponent(typeof(Rigidbody2D))]
public class CarController2D : MonoBehaviour
{
    // A simple car controller generated by ChatGPT to make prototype faster
    
    [Header("Car Settings")]
    public float acceleration = 5f;
    public float maxSpeed = 10f;
    public float steering = 2f;
    public float driftFactor = 0.95f;

    private Rigidbody2D rb;
    private float steerInput;
    private float accelInput;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
    }

    void Update()
    {
        accelInput = Input.GetAxis("Vertical");   // W/S hoặc ↑/↓
        steerInput = -Input.GetAxis("Horizontal");
    }

    void FixedUpdate()
    {
        // Giảm lực trôi (drift)
        Vector2 forwardVelocity = transform.up * Vector2.Dot(rb.velocity, transform.up);
        Vector2 rightVelocity = transform.right * Vector2.Dot(rb.velocity, transform.right);
        rb.velocity = forwardVelocity + rightVelocity * driftFactor;

        // Tăng tốc
        rb.AddForce(transform.up * accelInput * acceleration);

        // Giới hạn tốc độ tối đa
        if (rb.velocity.magnitude > maxSpeed)
            rb.velocity = rb.velocity.normalized * maxSpeed;

        // Quay xe
        float speedFactor = rb.velocity.magnitude / maxSpeed;
        rb.rotation += steerInput * steering * speedFactor;
    }

    // API cho Neural Network điều khiển
    public void SetAcceleration(float value)
    {
        accelInput = Mathf.Clamp(value, -1f, 1f); // -1 là giảm tốc, 1 là tăng tốc
    }

    public void SetSteering(float value)
    {
        steerInput = Mathf.Clamp(value, -1f, 1f); // -1 là rẽ trái, 1 là rẽ phải
    }

    public void StopCar()
    {
        accelInput = 0;  // Dừng tăng tốc
        steerInput = 0;  // Dừng quay
    }

    // API lấy thông tin từ xe (ví dụ: tốc độ, góc quay, v.v.)
    public float GetSpeed()
    {
        return rb.velocity.magnitude;
    }
}
